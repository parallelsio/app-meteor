// TODO: refactor out inheritance:
// from:  .bit.text .bit__content { }
// to:    .bit-text__content { }

// ******************** ALL BITS *************

.bit {
  display: none; // hide bits by default when map loads: animation functions display them 
  position: absolute;
  -webkit-font-smoothing: antialiased;
  outline: none;
  // border: 2px solid transparent;
}

.bit__content{
  position: relative;
  z-index: 2; // should be above the hovered .bit__drag-handle
}

.bit__drag-handle {
  display: none;
  position: absolute;
  z-index: 1;
}

.bit--selected {
  // border-color: transparent;
  // box-shadow: 0 0 0 2px blue;
}

.hovering .bit__drag-handle {
  display: block;
  width: 100%;
  background-color: #C6CED8;
  backface-visibility: hidden;
  cursor: move;
}



// ************** text bits 

.bit.text .bit__content {
  background: white;
  padding: 1.25em;
  min-height: 65px;
  min-width: 140px;
}



.bit.text.hovering .bit__drag-handle{

  height: 70vh;
  top: -20vh;

  // http://uigradients.com/#Earthly
  background: -webkit-linear-gradient(180deg, #85D2B5 10%, #DBD5A4 90%); /* Chrome 10+, Saf5.1+ */
  background:    -moz-linear-gradient(180deg, #85D2B5 10%, #DBD5A4 90%); /* FF3.6+ */
  background:     -ms-linear-gradient(180deg, #85D2B5 10%, #DBD5A4 90%); /* IE10 */
  background:      -o-linear-gradient(180deg, #85D2B5 10%, #DBD5A4 90%); /* Opera 11.10+ */
  background:         linear-gradient(180deg, #85D2B5 10%, #DBD5A4 90%); /* W3C */ 

}

.bit__controls{
  position: absolute;
  display: none;
  text-align: center;
  width:100%;  
  z-index: 2;
}


.bit__controls-persistent{
  z-index: 2;
  top: -3em;

}

.bit__controls-edit{
}

.controls__icon{
  display: inline-block;
  height: 2.5em;
  padding: 0 .75em;
  font-size: 1.25em;
  width: 2.5em;
  line-height: 2.5em;
  color: #8a8a8a;
}

.controls__icon:hover{
  background-color: #3C9FFF; 
  color: white;
  opacity: 0.75;
}



.bit__resize{
  position: absolute;

  // Jquery Resize UI automatically adds display:inline. 
  // Since we are manually show/hiding this handle (vs using Jquery 'autohide' param)
  // we need to use important, to make this is hidden until
  // text bit is double clicked to edit. Then, we'll display this resize handle
  display: none ; 

  bottom: -1px;
  right: -1px;
  height: 0; 
  width: 0; 

  height: 30px;
  width: 30px;
  z-index: 1000;
}

.bit__resize__triangle-icon{
  position: absolute;
  display: block;

  bottom: 0;
  right: 0;
  height: 0; 

  height: 20px;
  width: 20px;

  border-top: 20px solid transparent;
  border-right:20px solid #3C9FFF; 

  // margin: -15px;

}


.bit--editing {
  outline: none;
  border: 0;
  width: 100%;
  height: 100%;
  overflow: scroll;
}



// ******************** SKETCH BITS *************


.bit.sketch.hovering .bit__drag-handle{
  height: 100vh;
  top: -25vh;
  left: 80px;

  // adapted from uigradients.com/Reef
  background: -webkit-linear-gradient(180deg, #00D2FF 10%, #5D90E8 90%);
  background: -moz-linear-gradient(180deg, #00D2FF 10%, #5D90E8 90%);
  background: -ms-linear-gradient(180deg, #00D2FF 10%, #5D90E8 90%);
  background: -o-linear-gradient(180deg, #00D2FF 10%, #5D90E8 90%);
  background: linear-gradient(180deg, #00D2FF 10%, #5D90E8 90%);

  // adapted from uigradients.com/Reef
  // background: -webkit-linear-gradient(0deg, #00D2FF 10%, #6C71F3 90%); /* Chrome 10+, Saf5.1+ */
  // background:    -moz-linear-gradient(0deg, #00D2FF 10%, #6C71F3 90%); /* FF3.6+ */
  // background:     -ms-linear-gradient(0deg, #00D2FF 10%, #6C71F3 90%); /* IE10 */
  // background:      -o-linear-gradient(0deg, #00D2FF 10%, #6C71F3 90%); /* Opera 11.10+ */
  // background:         linear-gradient(0deg, #00D2FF 10%, #6C71F3 90%); /* W3C */

  // adapted from uigradients.com/Influenza
  // background: -webkit-linear-gradient(0deg, #C04848 10%, #480048 90%); /* Chrome 10+, Saf5.1+ */
  // background:    -moz-linear-gradient(0deg, #C04848 10%, #480048 90%); /* FF3.6+ */
  // background:     -ms-linear-gradient(0deg, #C04848 10%, #480048 90%); /* IE10 */
  // background:      -o-linear-gradient(0deg, #C04848 10%, #480048 90%); /* Opera 11.10+ */
  // background:         linear-gradient(0deg, #C04848 10%, #480048 90%); /* W3C */
}


/*
  Binds the HTML Dom element to the JS drawing engine via ploma.js.
  Doesn't need to be seen by person,
  but can't be hidden, as then JS lib can't attach to it.
  Since different browsers render the object element
  in different ways, the easiest thing is to just
  make it have no h/w
*/
#wtPlugin{
  width:0;
  height:0;
}



// ******************** IMAGE BITS *************

.bit.image img  {
  width: 200px;
}


.bit.image.hovering .bit__drag-handle {
  height: 70vh;
  top: -20vh;
  
  // adapted from uigradients.com/Influenza
  background: -webkit-linear-gradient(0deg, #DE6262 10%, #FFB88C 90%); /* Chrome 10+, Saf5.1+ */
  background:    -moz-linear-gradient(0deg, #DE6262 10%, #FFB88C 90%); /* FF3.6+ */
  background:     -ms-linear-gradient(0deg, #DE6262 10%, #FFB88C 90%); /* IE10 */
  background:      -o-linear-gradient(0deg, #DE6262 10%, #FFB88C 90%); /* Opera 11.10+ */
  background:         linear-gradient(0deg, #DE6262 10%, #FFB88C 90%); /* W3C */  
}


.bit.image .controls__icon-delete:hover{
  background-color: #f9ffb7; 
  color: #8a8a8a;
}


// file upload animation
@mixin keyframes($name) {
  @-webkit-keyframes #{$name} {
    @content;
  }
  @-moz-keyframes #{$name} {
    @content;
  }
  @keyframes #{$name} {
    @content;
  }
}

// TODO: use bourbon SASS functions here
@mixin prefix($map, $vendors: webkit moz ms o) {
  @each $prop, $value in $map {
    @if $vendors {
      @each $vendor in $vendors {
        #{"-" + $vendor + "-" + $prop}: #{$value};
      }
    }
    // Dump regular property anyway
    #{$prop}: #{$value};
  }
}

@include keyframes(passing-through) {

  0% {
    @include prefix((transform: translateY(40px)));
    opacity: 0;
  }

  30%, 70% {
    @include prefix((transform: translateY(0px)));
    opacity: 1;
  }

  100% {
    @include prefix((transform: translateY(-40px)));
    opacity: 0;
  }
}

@include keyframes(slide-in) {

  0% {
    @include prefix((transform: translateY(40px)));
    opacity: 0;
  }

  30% {
    @include prefix((transform: translateY(0px)));
    opacity: 1;
  }
}

@include keyframes(pulse) {
  0% { @include prefix((transform: scale(1))); }
  10% { @include prefix((transform: scale(1.1))); }
  20% { @include prefix((transform: scale(1))); }
}

.bit {
  
  .success .success-mark {
    @include prefix((animation: passing-through 3s cubic-bezier(0.770, 0.000, 0.175, 1.000)));
  }
  
  .error .error-mark {
    @include prefix((animation: slide-in 3s cubic-bezier(0.770, 0.000, 0.175, 1.000)));
    opacity: 1;
  }
  
  .success-mark, .error-mark {
    display: block;
    position: absolute;
    opacity: 0;
    z-index: 500;
    top: 50%;
    left: 50%;
    margin-left: -1.5em;
    margin-top: -1.5em;
    pointer-events: none;
  }
  
  .success-mark svg, .error-mark svg {
    display: block;
    width: 3em;
    height: 3em;
  }
  
  .processing .progress {
    @include prefix((transition: all 0.2s linear));
    opacity: 1;
  }
  
  .complete .progress {
    @include prefix((transition: opacity 0.4s ease-in));
    opacity: 0;
  }

  :not(.processing) .progress {
    @include prefix((animation: pulse 6s ease infinite));
  }

  .progress {
    position: absolute;
    overflow: hidden;
    opacity: 1;
    z-index: 1000;
    -webkit-transform: scale(1);
    height: 1em;
    width: 5em;
    top: 50%;
    left: 50%;
    margin-top: -0.75em;
    margin-left: -2.5em;
    background: rgba(255, 255, 255, 0.9);
    border-radius: 0.5em;
    pointer-events: none;
    
    .upload {
      @include prefix((transition: width 300ms ease-in-out));
      position: absolute;
      top: 0;
      left: 0;
      bottom: 0;
      width: 0;
      background: linear-gradient(to bottom, #666, #444);
      background: #333;
    }
  }

  .error {
    .error-message {
      display: block;
    }

    &:hover .error-message {
      opacity: 1;
      pointer-events: auto;
    }
  }

  .error-message {
    @include prefix((transition: opacity 0.3s ease));

    position: absolute;
    display: none;
    z-index: 1000;
    opacity: 0;
    top: 100%;
    width: 100%;
    padding: 0.5em 1.2em;
    background: linear-gradient(to bottom, #be2626, #a92222);
    background: #be2626;
    color: white;
    text-align: center;
    pointer-events: none;
    
    &:after {
      position: absolute;
      content: '';
      top: 0.4em;
      left: 50%;
      width: 0;
      height: 0;
      border-left: 0.4em solid transparent;
      border-right: 0.4em solid transparent;
      border-bottom: 0.4em solid #be2626;
    }
  }
}




